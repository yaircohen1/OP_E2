        -:    0:Source:TCPclient.cpp
        -:    1:#include "TCPclient.hpp"
        -:    2:using namespace std;
        -:    3:
       50:    4:int startTCPClient(const string &hostname, int port) {
       50:    5:    int socketClient = socket(AF_INET, SOCK_STREAM, 0);
       50:    6:    if (socketClient < 0) {
    #####:    7:        perror("Socket creation failed");
    #####:    8:        return -1;
        -:    9:    }
        -:   10:    
        -:   11:    // Create server address struct
        -:   12:    struct sockaddr_in serverAddress;  // Struct sockaddr_in is defined in the <netinet/in.h> header file.
       50:   13:    memset(&serverAddress, 0, sizeof(serverAddress));
        -:   14:    struct hostent *server;
        -:   15:
        -:   16:     // Resolve hostname to IP address
       50:   17:    server = gethostbyname(hostname.c_str());
       50:   18:    if (server == nullptr) {
    #####:   19:        cerr << "ERROR, no such host: " << hostname << endl;
    #####:   20:        close(socketClient);
    #####:   21:        return -1;
        -:   22:    }
        -:   23:
       50:   24:    serverAddress.sin_family = AF_INET;
        -:   25:    // bcopy copies the IP address from hostent to the sockaddr_in structure.
       50:   26:    bcopy((char *)server->h_addr, (char *)&serverAddress.sin_addr.s_addr, server->h_length);
       50:   27:    serverAddress.sin_port = htons(port); // htons() function ensures that the port number is properly formatted for network communication, regardless of the byte order of the host machine.
        -:   28:
       50:   29:    cout << "Connecting " << hostname << " on Port: " << port << endl;
       50:   30:    if (connect(socketClient, (struct sockaddr *)&serverAddress, sizeof(serverAddress)) < 0) {
    #####:   31:        perror("ERROR connecting");
    #####:   32:        close(socketClient);
    #####:   33:        return -1;
        -:   34:    }
       50:   35:    cout << "Connected " << hostname << " on Port: " << port << endl;
       50:   36:    return socketClient;
        -:   37:}
